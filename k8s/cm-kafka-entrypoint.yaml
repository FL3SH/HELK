apiVersion: v1
data:
  kafka-entrypoint.sh: "#!/bin/bash\n\nset -x\n\n# HELK script: kafka-entrypoint.sh\n#
    HELK script description: Starts Kafka services\n# HELK build Stage: Alpha\n# Author:
    Roberto Rodriguez (@Cyb3rWard0g)\n# License: GPL-3.0\n\n# *********** Configuring
    Kafka **************\necho \"[HELK-DOCKER-INSTALLATION-INFO] Processing kafka
    environment variables..\"\n\nif [[ -z \"$KAFKA_HEAP_OPTS\" ]]; then\n  export
    KAFKA_HEAP_OPTS=\"-Xmx1G -Xms1G\"\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Setting KAFKA_HEAP_OPTS to $KAFKA_HEAP_OPTS\"\n\nif [[ -z \"$KAFKA_BROKER_PORT\"
    ]]; then\n  KAFKA_BROKER_PORT=9092\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Setting kafka broker port to $KAFKA_BROKER_PORT\"\n\nif [[ -z \"$KAFKA_BROKER_NAME\"
    ]]; then \n  KAFKA_BROKER_NAME=helk-kafka-broker\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Setting kafka broker name to $KAFKA_BROKER_NAME\"\n\nif [[ -z \"$KAFKA_BROKER_ID\"
    ]]; then\n  KAFKA_BROKER_ID=1\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting
    kafka broker id to $KAFKA_BROKER_ID\"\n\nif [ -z \"$LOG_RETENTION_HOURS\" ]; then\n
    \ LOG_RETENTION_HOURS=4\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting kafka
    broker log retention hours to $LOG_RETENTION_HOURS\"\n\nif [[ -z \"$REPLICATION_FACTOR\"
    ]]; then\n  REPLICATION_FACTOR=1\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting
    replication factor for topics to $REPLICATION_FACTOR\"\n\nif [[ -z \"$ZOOKEEPER_NAME\"
    ]]; then\n  ZOOKEEPER_NAME=localhost\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Setting Zookeeper name to $ZOOKEEPER_NAME\"\n\nif [[ -z \"$ADVERTISED_LISTENER\"
    ]]; then\n  echo \"[HELK-DOCKER-INSTALLATION-INFO] ADVERTISED_LISTENER MUST BE
    SET WHEN RUNNING CONTAINER..\"\n  exit 1\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Setting Advertised listener value to $ADVERTISED_LISTENER\"\n\n\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Updating Kafka server properties file..\"\nsed -i \"s/^advertised\\.listeners\\=PLAINTEXT:\\/\\/.*$/advertised\\.listeners\\=PLAINTEXT\\:\\/\\/${ADVERTISED_LISTENER}\\:${KAFKA_BROKER_PORT}/g\"
    ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^listeners\\=PLAINTEXT:\\/\\/.*$/listeners\\=PLAINTEXT:\\/\\/${KAFKA_BROKER_NAME}\\:${KAFKA_BROKER_PORT}/g\"
    ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^listeners\\=PLAINTEXT:\\/\\/.*$/listeners=PLAINTEXT:\\/\\/${KAFKA_BROKER_NAME}\\:${KAFKA_BROKER_PORT}/g\"
    ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^broker\\.id\\=.*$/broker.id=${KAFKA_BROKER_ID}/g\"
    ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^log.retention.hours\\=.*$/log.retention.hours\\=$LOG_RETENTION_HOURS/g\"
    ${KAFKA_HOME}/config/server.properties\n\nif [[ -z \"$KAFKA_CREATE_TOPICS\" ]];
    then\n  KAFKA_CREATE_TOPICS=winlogbeat\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO]
    Creating the following kafka topics: $KAFKA_CREATE_TOPICS\"\n./kafka-create-topics.sh
    &\n\nexec \"$@\"\n"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"kafka-entrypoint.sh":"#!/bin/bash\n\n# HELK script: kafka-entrypoint.sh\n# HELK script description: Starts Kafka services\n# HELK build Stage: Alpha\n# Author: Roberto Rodriguez (@Cyb3rWard0g)\n# License: GPL-3.0\n\n# *********** Configuring Kafka **************\necho \"[HELK-DOCKER-INSTALLATION-INFO] Processing kafka environment variables..\"\n\nif [[ -z \"$KAFKA_HEAP_OPTS\" ]]; then\n  export KAFKA_HEAP_OPTS=\"-Xmx1G -Xms1G\"\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting KAFKA_HEAP_OPTS to $KAFKA_HEAP_OPTS\"\n\nif [[ -z \"$KAFKA_BROKER_PORT\" ]]; then\n  KAFKA_BROKER_PORT=9092\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting kafka broker port to $KAFKA_BROKER_PORT\"\n\nif [[ -z \"$KAFKA_BROKER_NAME\" ]]; then \n  KAFKA_BROKER_NAME=helk-kafka-broker\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting kafka broker name to $KAFKA_BROKER_NAME\"\n\nif [[ -z \"$KAFKA_BROKER_ID\" ]]; then\n  KAFKA_BROKER_ID=1\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting kafka broker id to $KAFKA_BROKER_ID\"\n\nif [ -z \"$LOG_RETENTION_HOURS\" ]; then\n  LOG_RETENTION_HOURS=4\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting kafka broker log retention hours to $LOG_RETENTION_HOURS\"\n\nif [[ -z \"$REPLICATION_FACTOR\" ]]; then\n  REPLICATION_FACTOR=1\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting replication factor for topics to $REPLICATION_FACTOR\"\n\nif [[ -z \"$ZOOKEEPER_NAME\" ]]; then\n  ZOOKEEPER_NAME=localhost\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting Zookeeper name to $ZOOKEEPER_NAME\"\n\nif [[ -z \"$ADVERTISED_LISTENER\" ]]; then\n  echo \"[HELK-DOCKER-INSTALLATION-INFO] ADVERTISED_LISTENER MUST BE SET WHEN RUNNING CONTAINER..\"\n  exit 1\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Setting Advertised listener value to $ADVERTISED_LISTENER\"\n\n\necho \"[HELK-DOCKER-INSTALLATION-INFO] Updating Kafka server properties file..\"\nsed -i \"s/^advertised\\.listeners\\=PLAINTEXT:\\/\\/.*$/advertised\\.listeners\\=PLAINTEXT\\:\\/\\/${ADVERTISED_LISTENER}\\:${KAFKA_BROKER_PORT}/g\" ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^listeners\\=PLAINTEXT:\\/\\/.*$/listeners\\=PLAINTEXT:\\/\\/${KAFKA_BROKER_NAME}\\:${KAFKA_BROKER_PORT}/g\" ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^listeners\\=PLAINTEXT:\\/\\/.*$/listeners=PLAINTEXT:\\/\\/${KAFKA_BROKER_NAME}\\:${KAFKA_BROKER_PORT}/g\" ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^broker\\.id\\=.*$/broker.id=${KAFKA_BROKER_ID}/g\" ${KAFKA_HOME}/config/server.properties\nsed -i \"s/^log.retention.hours\\=.*$/log.retention.hours\\=$LOG_RETENTION_HOURS/g\" ${KAFKA_HOME}/config/server.properties\n\nif [[ -z \"$KAFKA_CREATE_TOPICS\" ]]; then\n  KAFKA_CREATE_TOPICS=winlogbeat\nfi\necho \"[HELK-DOCKER-INSTALLATION-INFO] Creating the following kafka topics: $KAFKA_CREATE_TOPICS\"\n./kafka-create-topics.sh \u0026\n\nexec \"$@\"\n"},"kind":"ConfigMap","metadata":{"annotations":{},"creationTimestamp":null,"name":"kafka-entrypoint","namespace":"helk"}}
  creationTimestamp: null
  name: kafka-entrypoint
