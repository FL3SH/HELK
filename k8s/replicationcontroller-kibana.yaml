apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    component: elk
    role: kibana
  name: kibana
  selfLink: /api/v1/namespaces/helk/replicationcontrollers/kibana
spec:
  replicas: 1
  selector:
    component: elk
    role: kibana
  template:
    metadata:
      creationTimestamp: null
      labels:
        component: elk
        role: kibana
    spec:
      containers:
      - command:
        - bash
        - /usr/share/kibana/scripts/kibana-entrypoint.sh
        env:
        - name: KIBANA_ES_URL
          value: http://helk-elasticsearch:9200
        - name: CLUSTER_NAME
          value: helk-cluster
        image: docker.elastic.co/kibana/kibana:6.6.1
        imagePullPolicy: IfNotPresent
        name: helk-kibana
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP
        resources: {}
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /opt/kibana/config
          name: config
        - mountPath: /usr/share/kibana/dashboards
          name: dashboards
        - mountPath: /usr/share/kibana/scripts
          name: kibana-entrypoint
        - mountPath: /usr/share/kibana/logs
          name: logs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: kibana-yml
        name: config
      - configMap:
          defaultMode: 420
          name: dashboards
        name: dashboards
      - configMap:
          defaultMode: 420
          name: kibana-entrypoint
        name: kibana-entrypoint
      - emptyDir: {}
        name: logs
